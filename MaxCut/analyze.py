# encoding=utf-8
import matplotlib.pyplot as plt
from pylab import *         #支持中文
mpl.rcParams['font.sans-serif'] = ['SimHei']

names = ['5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
x = range(len(names))
PSO = [6,8,9,14,11,23,21,32,18,22,33,57,71,51,85,46,99,95,61,64,132,113,146,47,195,50,174,147,238,228,241,226,240,139,348,272,381,387,45,390,457,349,301,391,344,148,560,563,181,601,352,540,235,509,376,101,116,867,640,905,905,904,898,269,983,702,687,1065,1062,963,1006,311,1149,1164,726,255,857,831,1537,1371,1350,568,601,1706,590,1798,354,1807,1878,1607,1236,1313,1171,1113,1924,1991]

SA = [6,8,9,14,11,23,22,35,19,22,34,58,71,56,87,53,103,99,63,69,137,121,154,53,200,57,188,164,242,239,249,236,244,154,356,287,393,403,52,402,471,378,326,404,376,167,579,565,194,624,372,569,237,525,402,120,124,896,679,933,930,932,943,301,992,750,722,1101,1109,1025,1059,356,1201,1218,763,286,922,886,1579,1366,1426,619,648,1744,666,1853,417,1860,1941,1678,1258,1390,1218,1138,2004,2065]

t1 = [1,0,0,0,1,2,1,1,0,3,2,1,2,3,2,2,3,2,3,3,3,3,3,4,3,4,3,6,5,3,4,7,4,6,5,5,7,4,7,7,9,10,7,8,12,7,7,10,12,12,22,9,10,14,12,9,13,11,15,11,11,17,12,15,18,20,23,21,16,20,19,24,20,17,24,26,32,34,16,20,25,25,21,24,19,33,28,18,27,57,43,30,44,39,48,39]


t2 = [140,158,171,198,242,323,318,319,271,283,379,466,540,684,581,501,520,894,577,602,746,921,988,711,718,904,803,866,848,1985,972,1195,1249,1090,1042,1177,3349,1632,1604,1282,1744,1689,1464,1697,2405,1478,1514,3833,1641,1949,5668,1859,2210,2598,2075,1859,2380,2024,2301,2508,4659,2400,2427,2544,8253,3038,3053,2793,2750,3733,3167,4023,3007,5968,3669,3004,3567,3649,3388,10257,4492,3816,4528,4191,4232,3579,4490,5358,3813,6047,25830,4834,4837,17733,4467,4557]

epo1 = [1,1,1,1,1,1,1,1,1,8,1,1,3,7,4,4,8,2,6,5,5,6,3,9,2,9,2,9,7,3,4,11,3,7,4,3,9,2,8,5,11,7,4,6,5,4,2,7,8,9,9,3,5,9,5,2,7,5,7,5,4,10,4,7,10,9,10,11,6,8,8,12,7,5,8,13,10,13,4,6,8,8,5,7,3,14,10,3,9,23,13,6,13,10,17,12]

epo2 = [1,1,1,1,1,2,2,2,1,1,2,2,3,4,3,2,2,5,2,2,3,4,3,2,2,3,2,2,2,8,2,3,3,2,2,2,8,4,4,2,4,3,2,2,4,2,2,9,2,2,12,2,3,3,2,2,3,2,2,3,7,2,2,2,12,2,2,2,2,3,2,4,2,6,2,2,2,2,2,11,3,2,3,3,2,2,3,4,2,4,24,2,2,15,2,2]


# plt.plot(x, PSO, 'ro-')
# plt.plot(x, SA, 'bo-')
# plt.xlim(4, 21) # 限定横轴的范围
# plt.ylim(0, 6) # 限定纵轴的范围
delta = []
for i in range(0, 96, 1):
    delta.append(SA[i] - PSO[i])
# plt.plot(x, PSO, label=u'普通粒子群算法得到的解')
# plt.plot(x, t1, label=u'普通粒子群算法消耗的时间')
plt.plot(x, epo1, label=u'普通粒子群算法的收敛轮数')
# plt.plot(x, SA, label=u'混合算法消耗得到的解')
# plt.plot(x, t2, label=u'混合算法消耗的时间')
plt.plot(x, epo2, label=u'混合算法的收敛轮数')
# plt.plot(x, delta, label=u'混合算法的解与普通粒子群算法的解的差值')
plt.legend() # 让图例生效
# plt.xticks(x, names, rotation=45)
plt.margins(0)
plt.subplots_adjust(bottom=0.15)
plt.xlabel(u"图的规模") #X轴标签
# plt.ylabel(u"解的大小") #Y轴标签
plt.ylabel(u"消耗的时间 (ms)") #Y轴标签
# plt.ylabel(u"收敛轮数") #Y轴标签

# plt.title(u"随机图下两种算法性能对比") #标题
# plt.title(u"随机图下两种算法消耗时间对比") #标题
plt.title(u"随机图下两种算法收敛轮数对比") #标题

plt.show()